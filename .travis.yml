language: android
jdk: oraclejdk8
sudo: false

android:
  components:
    # use the latest revision of Android SDK Tools
    - platform-tools
    - tools

    # The BuildTools version used by your project
    - build-tools-24.0.2

    # The SDK version used to compile your project
    - android-22
    - android-24
    - android-26
#    - android-28

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - sys-img-armeabi-v7a-android-22
    - sys-img-armeabi-v7a-android-26

    # Additional components
    - extra-android-m2repository
  licenses:
    - android-sdk-preview-license-.+
    - android-sdk-license-.+
    - google-gdk-license-.+


before_script:
  - yes | sdkmanager "platforms;android-22"
  - yes | sdkmanager "platforms;android-24"
  - yes | sdkmanager "platforms;android-26"
  - yes | sdkmanager "platforms;android-27"
  - yes | sdkmanager "platforms;android-28"
  # If permission for Gradlew Dependencies fail, use this.
  - sudo chmod +x ./gradlew

#  # Create and start emulator
#  - echo no | android create avd --force -n test -t android-22 --abi armeabi-v7a
#  - emulator -avd test -no-skin -no-audio -no-window &
#  - android-wait-for-emulator
#  - adb shell input keyevent 82 &

stages:
  - compile
  - test
  - deploy

jobs:
  include:
    - stage: test
      name: "Dependencies"
      script: ./gradlew androidDependencies
    - script: ./gradlew lint test
      name: "Lint"
#    - script: ./gradlew connectedAndroidTest
#      name: "connectedAndroidTest"


# A peculiarity of dependency caching in Gradle means that to avoid uploading the cache
# after every build you need to add the following
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache

# test